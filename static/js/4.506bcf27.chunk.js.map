{"version":3,"sources":["HowMuch.js","HowMuch.module.css"],"names":["round","value","places","Number","Math","parseFloat","toFixed","custom_computer","HowMuch","props","state","computer","place","pue","count","time","percent","times","item","this","setState","c","power","tflops","cores","acores","isCustomComputer","homes","getPlace","scale","getComputer","p","calculatePower","unit","s","num_homes","getPlacePower","startsWith","indexOf","the","placeHasThe","i","length","push","label","keys","Object","sort","computers","kwatt","calculateKW","domestic","calculateDomestic","details","cpower","className","styles","min","max","step","onChange","slotCustomPower","slotCustomTFLOPs","slotCustomCores","slotCustomACores","is_calculated","container","class","selectComputer","options","slotSelectComputer","slotChangePUE","result","selectPlace","slotSelectPlace","calculateNumHomes","job","slotChangeCount","selectUnit","slotChangeTime","slotChangePercent","sources","href","React","Component","module","exports"],"mappings":"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","file":"static/js/4.506bcf27.chunk.js","sourcesContent":["import React from 'react';\n\nimport NumericInput from 'react-numeric-input';\nimport Select from 'react-select';\n\nimport styles from './HowMuch.module.css';\n\nimport power from './power.json';\nimport homes from './homes.json';\n\n/* This is a very simple react webapp that has been put together in 2 days\n   to help researchers compare the amount of electricity used by their\n   supercomputing jobs to the amount of electricity used in their\n   domestic lives.\n\n   (C) Christopher Woods, University of Bristol, 2020\n\n   Released under the MIT license\n*/\n\nfunction round(value, places=2){\n  return Number(Math.round(parseFloat(value + 'e' + places))\n                 + 'e-' + places).toFixed(places);\n}\n\nlet custom_computer = \"A custom supercomputer\";\n\nclass HowMuch extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {computer: custom_computer,\n                  place: \"United Kingdom\",\n                  pue: 1.2,\n                  count: 1.0,\n                  time: 0,\n                  percent: 100,\n                  times: [[\"hour\", 1],\n                          [\"day\", 24],\n                          [\"week\", 24*7],\n                          [\"month\", 24*30],\n                          [\"year\", 24*365]],\n                  custom_computer: {\"power\": 1000.0,\n                                    \"tflops\": 1000,\n                                    \"cores\": 50000,\n                                    \"acores\": 0,\n                                   }\n                 };\n  }\n\n  slotSelectComputer(item){\n    this.setState({\"computer\": item});\n  }\n\n  slotSelectPlace(item){\n    this.setState({\"place\": item});\n  }\n\n  slotChangePercent(value){\n    if (value < 0.1){\n      value = 0.1;\n    }\n    else if (value > 100){\n      value = 100;\n    }\n\n    this.setState({\"percent\": value});\n  }\n\n  slotChangePUE(value){\n    if (value < 1.0){\n      value = 1.0;\n    }\n    else if (value > 2.0){\n      value = 2.0;\n    }\n\n    this.setState({\"pue\": value});\n  }\n\n  slotChangeCount(value){\n    if (value < 0.1){\n      value = 0.1;\n    }\n    else if (value > 100){\n      value = 100;\n    }\n\n    this.setState({\"count\": value});\n  }\n\n  slotChangeTime(value){\n    if (value < 0){\n      value = 0;\n    }\n    else if (value >= this.state.times.count){\n      value = this.state.times.count - 1;\n    }\n\n    this.setState({\"time\": value});\n  }\n\n  slotCustomPower(value){\n    if (value < 0.1){\n      value = 0.1;\n    }\n    else if (value > 50){\n      value = 50.0;\n    }\n\n    let c = {...this.state.custom_computer};\n\n    c.power = 1000 * value;\n\n    this.setState({custom_computer: c});\n  }\n\n  slotCustomTFLOPs(value){\n    if (value < 1){\n      value = 1;\n    }\n    else if (value > 1000000){\n      value = 1000000.0;\n    }\n\n    let c = {...this.state.custom_computer};\n\n    c.tflops = value;\n\n    this.setState({custom_computer: c});\n  }\n\n  slotCustomCores(value){\n    if (value < 1){\n      value = 1;\n    }\n    else if (value > 1000000){\n      value = 1000000.0;\n    }\n\n    let c = {...this.state.custom_computer};\n\n    c.cores = value;\n\n    this.setState({custom_computer: c});\n  }\n\n  slotCustomACores(value){\n    if (value < 1){\n      value = 1;\n    }\n    else if (value > 1000000){\n      value = 1000000.0;\n    }\n\n    let c = {...this.state.custom_computer};\n\n    c.acores = value;\n\n    this.setState({custom_computer: c});\n  }\n\n  getComputer(){\n    if (this.isCustomComputer()){\n      return this.state.custom_computer;\n    }\n    else {\n      return power[this.state.computer];\n    }\n  }\n\n  isCustomComputer(){\n    return this.state.computer === custom_computer;\n  }\n\n  getPlace(){\n    return homes[this.state.place];\n  }\n\n  getPlacePower(){\n    let kWhYear = this.getPlace();\n    return kWhYear / (365*24);\n  }\n\n  calculatePower(scale=true){\n    let computer = this.getComputer();\n    let p = computer.power;\n\n    if (scale){\n      p = this.state.percent * p / 100.0;\n    }\n\n    return p * this.state.pue;\n  }\n\n  calculateKW(){\n    let p = this.calculatePower();\n\n    let unit = \"kilowatt\";\n\n    if (p > 1000){\n      p /= 1000;\n      unit = \"megawatt\";\n    }\n\n    let s = \"s\";\n\n    if (p === 1.0){\n      s = \"\";\n    }\n\n    return `${round(p,3)} ${unit}${s}`;\n  }\n\n  calculateNumHomes(scale=true){\n    let num_homes = this.calculatePower(scale) / this.getPlacePower();\n\n    if (num_homes <= 1){\n      return `${round(num_homes, 0)} home`;\n    }\n    else{\n      return `${round(num_homes, 0)} homes`;\n    }\n  }\n\n  calculateDomestic(){\n    let time = this.state.times[this.state.time][1] * this.state.count;\n    let kWh = this.calculatePower() * time;\n\n    time = kWh / this.getPlacePower();\n\n    let unit = \"hour\";\n    let s = \"s\";\n\n    if (time > (365*24)){\n      time /= (365*24);\n      unit = \"year\";\n    }\n    else if (time > (30*24)){\n      time /= (30*24);\n      unit = \"month\";\n    }\n    else if (time > (7*24)){\n      time /= (7*24);\n      unit = \"week\";\n    }\n    else if (time > 24){\n      time /= 24;\n      unit = \"day\";\n    }\n\n    time = round(time, 1);\n\n    if (time === \"1.0\"){\n      s = \"\";\n    }\n\n    return `${time} ${unit}${s}`;\n  }\n\n  placeHasThe(){\n    let p = this.state.place;\n\n    if (p.startsWith(\"United\")){\n      return true;\n    }\n    else if ([\"Netherlands\", \"European Union\", \"World\"].indexOf(p) >= 0){\n      return true\n    }\n\n    return false;\n  }\n\n  render(){\n    let s = \"s\";\n\n    if (this.state.count === 1.0){\n      s = \"\";\n    }\n\n    let the = \"\";\n\n    if (this.placeHasThe()){\n      the = \"the\";\n    }\n\n    let time = null;\n    let times = [];\n    for (let i=0; i<this.state.times.length; ++i){\n      times.push({value:i, label:`${this.state.times[i][0]}${s}`});\n\n      if (this.state.time === i){\n        time = times[i];\n      }\n    }\n\n    let place = null;\n    let places = [];\n    let keys = Object.keys(homes);\n    keys.sort();\n\n    for (let i=0; i<keys.length; ++i){\n      places.push({value:keys[i], label:keys[i]});\n\n      if (this.state.place === keys[i]){\n        place = places[i];\n      }\n    }\n\n    let computer = null;\n    let computers = [{value:custom_computer, label:custom_computer}];\n    keys = Object.keys(power);\n    keys.sort();\n\n    for (let i=0; i<keys.length; ++i){\n      computers.push({value:keys[i], label:keys[i]});\n\n      if (this.state.computer === keys[i]){\n        computer = computers[i+1];\n      }\n    }\n\n    if (this.isCustomComputer()){\n      computer = {value:custom_computer, label:custom_computer};\n    }\n\n    let kwatt = this.calculateKW();\n    let domestic = this.calculateDomestic();\n\n    let details = null;\n    let cores = null;\n    let acores = null;\n    let cpower = null;\n\n    if (this.isCustomComputer()){\n      let c = this.state.custom_computer;\n      cores = c.cores;\n      acores = c.acores;\n      cpower = c.power;\n\n      let unit = \"megawatts\";\n\n      if (c.power === 1000){\n        unit = \"megawatt\";\n      }\n\n      details = <span className={styles.details}>\n                  consumes&nbsp;\n                  <NumericInput min={0.1} max={50.0} value={c.power/1000}\n                                step={0.5}\n                                onChange={(value)=>{this.slotCustomPower(value)}}/>&nbsp;\n                  {unit}, and runs at an Rmax speed of&nbsp;\n                  <NumericInput min={1} max={1000000} value={c.tflops}\n                                step={100}\n                                onChange={(value)=>{this.slotCustomTFLOPs(value)}}/>&nbsp;\n                  TFLOPs. This is an efficiency of {round(c.tflops/c.power, 1)} GFLOPs/Watt.\n                  It contains&nbsp;\n                  <NumericInput min={1} max={1000000} value={c.cores}\n                                step={100}\n                                onChange={(value)=>{this.slotCustomCores(value)}}/>&nbsp;\n                  cores and&nbsp;\n                  <NumericInput min={1} max={1000000} value={c.acores}\n                                step={100}\n                                onChange={(value)=>{this.slotCustomACores(value)}}/>&nbsp;\n                  accelerator cores.\n                </span>\n    }\n    else{\n      let c = this.getComputer();\n      cores = c.cores;\n      acores = c.acores;\n      cpower = c.power;\n\n      if (c.is_calculated){\n        details = <span className={styles.details}>\n                    is estimated to consume {round(c.power/1000, 3)} megawatts (based\n                    on the average efficiency of {round(c.tflops/c.power, 1)} GFLOPs / Watt\n                    of its year, and a reported RMax speed of {c.tflops} TFLOPs).\n                  </span>\n      }\n      else{\n        details = <span className={styles.details}>\n                    is reported to consume {c.power/1000} megawatts to achieve a reported\n                    RMax speed of {c.tflops} TFLOPs (an efficiency\n                    of {round(c.tflops/c.power,1)} GFLOPs / Watt).\n                  </span>\n      }\n    }\n\n    return <div className={styles.container}>\n             <div class=\"w3-panel w3-pale-green w3-leftbar w3-rightbar w3-border-green w3-padding-16\"\n                  className={styles.computer}>\n              <div className={styles.selectComputer}>\n                <Select options={computers}\n                        value={computer}\n                        onChange={(item)=>{this.slotSelectComputer(item.value);}}/>\n              </div>&nbsp;\n              {details}\n              <div className={styles.computer}>\n                Assuming a PUE of&nbsp;\n                <NumericInput min={1.0} max={2.0} value={this.state.pue}\n                              step={0.1}\n                              onChange={(value)=>{this.slotChangePUE(value)}}/>&nbsp;\n                it will burn electricity at a rate\n                of <span className={styles.result}>\n                      {round(0.001 * cpower * this.state.pue, 3)} megawatts\n                   </span>.\n              </div>\n             </div>\n\n             <div class=\"w3-panel w3-pale-yellow w3-leftbar w3-rightbar w3-border-yellow w3-padding-16\"\n                  className={styles.domestic}>\n               Compared to the average domestic electricity consumption in {the}&nbsp;\n               <div className={styles.selectPlace}>\n                 <Select options={places}\n                         value={place}\n                         onChange={(item)=>{this.slotSelectPlace(item.value);}}/>\n               </div>,&nbsp;\n               this is the same as powering&nbsp;\n               <span className={styles.result}>\n                 {this.calculateNumHomes(false)}\n               </span>.\n             </div>\n\n             <div class=\"w3-panel w3-pale-red w3-leftbar w3-rightbar w3-border-red w3-padding-16\"\n                  className={styles.job}>\n               The electricity consumed to run a job for&nbsp;\n               <NumericInput min={0.0} max={100.0} value={this.state.count}\n                                step={1}\n                                onChange={(value)=>{this.slotChangeCount(value)}}/>\n               <div className={styles.selectUnit}>\n                 <Select options={times}\n                        value={time}\n                        onChange={(item)=>{this.slotChangeTime(item.value);}}/>\n               </div>,&nbsp;\n               that uses&nbsp;\n               <NumericInput min={0.1} max={100.0} value={this.state.percent}\n                            step={5}\n                            onChange={(value)=>{this.slotChangePercent(value)}}/>% of&nbsp;\n               this supercomputer (so {round(this.state.percent*cores/100.0, 0)} cores\n               and {round(this.state.percent*acores/100.0, 0)} accelerator cores,\n               consuming {kwatt} - equivalent to {this.calculateNumHomes(true)}) would power an average\n               home in {the} {this.state.place} for&nbsp;\n               <span className={styles.result}>{domestic}</span>.\n             </div>\n\n             <div class=\"w3-panel w3-pale-blue w3-leftbar w3-rightbar w3-border-blue w3-padding-16\"\n                  className={styles.sources}>\n               <ul class=\"w3-ul\">\n                 <li> The total electricity consumption of the average home\n                      in {the} {this.state.place} is {this.getPlace()} kWh per year, which\n                      is an average of {round(1000 * this.getPlace() / (365*24),0)} Watts.</li>\n                 <li>Supercomputer power information taken from the&nbsp;\n                     <a href=\"https://top500.org\">Top500</a></li>\n                 <li>Average domestic power consumption in 2014 taken from&nbsp;\n                     <a href=\"https://www.wec-indicators.enerdata.eu/household-electricity-use.html\">\n                       World Energy Forum figures\n                     </a>\n                 </li>\n                 <li>Average domestic energy consumption in UK in 2019 taken from&nbsp;\n                     <a href=\"https://www.ovoenergy.com/guides/energy-guides/how-much-electricity-does-a-home-use.html\">\n                       OVO Energy guides\n                     </a>\n                 </li>\n                 <li>The PUE is the \"power utilisation efficiency\", and relates the\n                     electricity consumed by a data center to the actual electricity\n                     consumed by the computers in the date center. The PUE will always\n                     be greater than 1.0 as some electricity is needed to power cooling,\n                     lighting, security etc. According\n                     to <a href=\"https://journal.uptimeinstitute.com/is-pue-actually-going-up/\">\n                       this paper\n                     </a> the average PUE is about 1.6. You\n                     can <a href=\"https://www.42u.com/measurement/pue-dcie.htm\">calculate PUEs here</a>. This\n                     suggests that the average PUE is about 2.0, while 1.2 represents a \"very efficient\" data center.\n                 </li>\n                 <li>\n                   All information is presented in good faith based on values reported in\n                   the above sources. The rationale for any estimated power consumptions of\n                   of supercomputers is given (essentially the median computational efficiency\n                   for the Top500 for the year the supercomputer is last published, multiplied\n                   by the reported Rmax value). If you want to correct any information or have\n                   any questions then\n                   please <a href=\"https://github.com/chryswoods/howmuchisenough\">lodge an issue</a>\n                   and we will do our best to respond.\n                 </li>\n                 <li>\n                   Note that the data is based on power consumption of the supercomputer during\n                   the linpack run used for its Top500 submission (the way this is measured\n                   is <a href=\"https://www.top500.org/green500/\">described on the Green500 site).</a> This is for illustration only,\n                   and is not going to be exactly equal to the day-to-day power consumption of\n                   the supercomputer, as this will vary with the type of workload. However, it\n                   is useful to help illustrate a comparison to domestic energy consumption. It\n                   is hoped that this will encourage researchers to think carefully about the\n                   electricity costs of their supercomputer jobs, so that they take the time and\n                   effort needed to plan their experiments and optimise their codes so that\n                   they use the minimum electricity in the most efficient possible way.\n                 </li>\n               </ul>\n             </div>\n           </div>;\n  }\n};\n\nexport default HowMuch;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HowMuch_container__3avOH\",\"selectComputer\":\"HowMuch_selectComputer__2Rhv9\",\"selectPlace\":\"HowMuch_selectPlace__2dDPu\",\"selectUnit\":\"HowMuch_selectUnit__2bItn\",\"result\":\"HowMuch_result__3G6GH\",\"sources\":\"HowMuch_sources__13dtw\"};"],"sourceRoot":""}